# Use screen stype prefix
unbind C-b
set -g prefix C-a
bind-key a  send-prefix

# bind keys for easy previous and nex window movement
bind-key C-a last-window
# bind-key -n F5 previous-window
# bind-key -n F6 next-window


# split panes with | and -
# Open panes in the same directory with #{pane_current_path}
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# switch panes using Alt-arrow without prefix
# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

bind -n M-B switch-client -l
bind -n M-b switch-client -l

# Create a new session with the name same as current directory
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill a session without leaving tmux
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux *([.0-9]+).*/\1/p")'

# FZF based fuzzy switch session
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# Prompted join-pane

# Easily swap a pane (targeted by pane number) with the current pane
bind-key M-s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Add cht.sh bindkey
bind -r i run-shell "tmux neww tmux-cht.sh"

# don't rename windows automatically
set-option -g allow-rename off
set-option -g renumber-windows on

bind-key m switch-client -Tmytable1
bind-key b switch-client -Tmytable2

# Toggle mouse on
bind-key -Tmytable1 M \
  set-option -g mouse on \;\
  display-message 'Mouse: ON'

# Toggle mouse off
bind-key -Tmytable1 m \
  set-option -g mouse off \;\
  display-message 'Mouse: OFF'

# Open python or ipython in a new window
bind-key -Tmytable1 i split-window -v "ipython"
bind-key -Tmytable1 p split-window -v "python"
bind-key -Tmytable1 f new-window "~/.bin/manpages_fzf.sh"

bind-key -Tmytable2 j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Open htop in a new window
bind-key -Tmytable1 h new-window "htop"


set -g history-limit 100000

#Enable vi mode for tmux settings
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection

bind-key -Tmytable1 s new-session -A -s "scratch"

# Focus events
set -g focus-events on

set -g default-terminal "screen-256color"
set -as terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'

if-shell -b '[ "$(echo "$TMUX_VERSION >= 3.2" | bc)" = 1 ]' \
    'source ~/.tmux-3.2.conf'


######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity on
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'fg=colour9 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour236 fg=colour137 dim'
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour253] %H:%M %d/%m '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'fg=colour1 bg=colour210 bold'
setw -g window-status-current-format ' #[fg=colour1]#I#[fg=colour233]:#[fg=colour233]#W '

setw -g window-status-style 'fg=colour9'
setw -g window-status-format ' #[fg=colour123]#I#[fg=colour255]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
set -g message-style 'fg=colour9 bg=colour236 bold'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'wfxr/tmux-power'
#set -g @tmux_power_theme 'coral'
#set -g @tmux_power_date_icon ''
#set -g @tmux_power_time_icon ''
#set -g @tmux_power_user_icon ''
# set -g @plugin 'odedlaz/tmux-onedark-theme'
set -g @plugin 'anirudhsundar/tmux-onedark-theme-grey'
# set -g @plugin "janoamaral/tokyo-night-tmux"
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark' # or 'light'
# set -g @plugin 'o0th/tmux-nova'
# set -g @nova-nerdfonts false
# set -g @plugin 'fabioluciano/tmux-tokyo-night'
# set -g @theme_variation 'night'
# set -g @theme_enable_icons 0

run -b '~/.tmux/plugins/tpm/tpm'

# Resurrect save directory based on hostname
set -g @resurrect-dir '$HOME/.tmux/$HOSTNAME/resurrect'
unbind C-r
